Universal Grapheme-to-Phoneme converter for Indian languages
------------------------------------------------------------
03/09/2019

1. Created a mapping for unicode code points and different roman transliteration schemes
2. Need to distinguish between independent (akshar) and dependent (maatra) 
based on name of the code
3. Convert independent signs first.
4. Convert diacritics nukta and anusvara.
5. Convert dependent vowel signs.
6. Dependent signs apply to context following schwa (a).
7. For the nasal sign, a special rule is required since it can apply 
after all kinds of vowels and not just schwa.
8. Devnagari, Telugu, Malayalam and Gurmukhi (Punjabi) have similar 
code ranges, only differing in prefixes. Codes for these languages 
can be generated by transforming Devnagari codes. 
9. Usage of script:
python3 indicg2p.py --lang <dev/telugu/malayalam/gurmukhi> -- infile <hin_input.txt/tel_input.txt>
10. Requires python3
11. Scripts prints converted text to stdout
12. Tested using hin_input*.txt (sources: http://sahigyan.com, https://www.hindikiduniya.com/hindi-essay/) 
and tel_input*.txt (source: http://eemaata.com).

Transliteration schemes:
1. Roman transliteration scheme based on unicode code definitions at https://www.unicode.org/charts/PDF/U0900.pdf
2. Sampa transliteration scheme based on character definitions in http://tdil.meity.gov.in/WSI/docs/PLexicon1.pdf 
and https://docit.tips/download/sampa-for-hindi-and-punjabi-based-on-their-acoustic-and-phonetic_pdf
3. Some character definitions added to sampa charset- halant and nukta (_)

Issues:
1. what about word-final schwa deletion in Hindi?


06/09/2019

1. Added wx and ipa transliteration schemes. WX notation described at https://en.wikipedia.org/wiki/WX_notation was used.
2. IPA symbols are mine. 
3. Added unicode points for Bengali which can be used to generate codes for other languages
